
--VISTA DEL LOGIN
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW V_LOGIN  AS 
  SELECT 
    A.ID_PERSONA,
    A.NOMBRE,
    A.APE_PATE,
    A.APE_MATE,
    A.FECHA_NAC,
    A.DIRECCION_RES,
    A.TEL_CEL,
    A.TEL_FIJO,
    A.CORREO_ELECTRONICO,
    A.SEXO,
    A.NUM_IDENTIFICACION,
    A.FECHA_EXPIRACION_IDE,
    A.CARGO_TRABAJO,
    B.ID_USER,
    B.USUARIO,
    B.CONTRASEÑA,
    B.ADMINISTRADOR,
    B.PRESTAMOS,
    B.CUENTAS,
    B.TARJETAS,
    B.ESTADO,
    C.ID_CARGO_EMPLEADO,
    C.NOM_CARGO
FROM 
    TB_USUARIO B
INNER JOIN 
    TB_PERSONAS       A ON A.ID_PERSONA = B.ID_PERSONA
INNER JOIN
    TB_CARGO_EMPLEADO C ON B.ID_CARGO_EMPLEADO = C.ID_CARGO_EMPLEADO
WHERE B.ESTADO = 1;
--SELECT*FROM V_LOGIN;


--VISTA DE CLIENTES
CREATE OR REPLACE VIEW V_CLIENTES AS
SELECT
    A.ID_PERSONA,
    B.ID_TP_CLIENTE,
    C.ID_IDENTIFICACION,
    D.ID_PAIS,
    E.ID_ESTADO_CIVIL,
    F.ID_RANGO_INGRESO,
    G.ID_MONEDA,
    H.ID_SUCURSAL,
    
    A.FECHA_CREACION, 
    --CAST(A.NOMBRE || ' ' || A.APE_PATE || ' ' || A.APE_MATE AS VARCHAR(100)) AS NOMBRE,
    A.NOMBRE,
    A.APE_PATE,
    A.APE_MATE,
    A.FECHA_NAC,
    A.DIRECCION_RES,
    A.TEL_CEL,
    A.TEL_FIJO,
    A.CORREO_ELECTRONICO,
    CASE 
        WHEN A.SEXO = 0 THEN 'Femenino'
        WHEN A.SEXO = 1 THEN 'Masculino'
        ELSE 'No especificado' 
    END AS SEXO,
    A.NUM_IDENTIFICACION,
    A.FECHA_EXPIRACION_IDE,
    A.CARGO_TRABAJO,
    B.CLIENTE,
    C.NOM_IDENTIFICACION,
    D.NOM_PAIS,
    E.NOM_ESTADO_CIVIL AS ESTADO_CIVIL,
    F.RANGO AS RANGO_INGRESO,
    G.NOM_MONEDA,
    H.DIRECCION
    
FROM 
    TB_PERSONAS A
    INNER JOIN TB_TIPO_CLIENTE        B ON A.ID_TP_CLIENTE     = B.ID_TP_CLIENTE
    INNER JOIN TB_TIPO_IDENTIFICACION C ON A.ID_IDENTIFICACION = C.ID_IDENTIFICACION
    INNER JOIN TB_PAISES              D ON A.ID_PAIS           = D.ID_PAIS
    INNER JOIN TB_ESTADOS_CIVILES     E ON A.ID_ESTADO_CIVIL   = E.ID_ESTADO_CIVIL
    INNER JOIN TB_RANGO_INGRESO       F ON A.ID_RANGO_INGRESO  = F.ID_RANGO_INGRESO
    INNER JOIN TB_MONEDAS             G ON A.ID_MONEDA         = G.ID_MONEDA
    INNER JOIN TB_SUCURSAL            H ON A.ID_SUCURSAL       = H.ID_SUCURSAL
WHERE A.ESTADO = 1 AND A.EMPLEADO = 0
ORDER BY A.NOMBRE ASC;
/*
UPDATE TB_TIPO_CLIENTE
SET ID_TP_CLIENTE = 3
WHERE cliente = 'Agente Financiero';

SELECT ID_TIPO_TARJETA,NOM_TARJETA FROM TB_TIPO_TARJETA WHERE ESTADO = 1
*/
--SELECT*FROM tb_personas
--VISTA DE TARJETAS DE CCREDITO
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW V_TARJETAS AS
SELECT
        A.ID_TARJETA,
        B.ID_PERSONA,
        C.ID_CUENTA,
        D.ID_TIPO_TARJETA,
        
        A.FECHA_CREACION,
        A.CODIGO_TARJETA,
        A.SALDO,
        A.LIMITE,
        
        B.NOMBRE,
        B.APE_PATE,
        B.APE_MATE,
        C.CODIGO_CUENTA,
        D.NOM_TARJETA
              
FROM  TB_TARJETA A
        
        INNER JOIN TB_PERSONAS     B ON A.ID_PERSONA      = B.ID_PERSONA
        INNER JOIN TB_CUENTA       C ON A.ID_CUENTA       = C.ID_CUENTA
        INNER JOIN TB_TIPO_TARJETA D ON A.ID_TIPO_TARJETA = D.ID_TIPO_TARJETA
        
WHERE A.ESTADO = 1
ORDER BY B.NOMBRE ASC;

--VISTA DE CUENTAS --Script desarrollado por: César Ovidio Martínez Chicas.
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW V_CUENTAS AS
SELECT
      A.ID_CUENTA,
      B.ID_TIPO_APLICACION,
      C.ID_PERSONA,
      D.ID_SUCURSAL,      
      A.FECHA_CREACION,
      C.NOMBRE,
      C.APE_PATE,
      C.APE_MATE,  
      A.CODIGO_CUENTA,
      A.SALDO_APERTURA,
      A.SALDO_CUENTA,
      A.SALDO_CONGELADO,
      A.FECHA_CANCELACION,      
      B.NOM_PRODUCTO,
      BB.NOM_SERVICIO,       
      D.DIRECCION AS UNIDAD
    
FROM  TB_CUENTA A
        INNER JOIN TB_PRODUCTO_APLICACION  B  ON A.ID_TIPO_APLICACION = B.ID_TIPO_APLICACION
        INNER JOIN TB_TIPO_PRODUCTO        BB ON B.ID_TIPO_PRODUCTO   = BB.ID_TIPO_PRODUCTO
        INNER JOIN TB_PERSONAS             C  ON A.ID_PERSONA         = C.ID_PERSONA
        INNER JOIN TB_SUCURSAL             D  ON A.ID_SUCURSAL        = D.ID_SUCURSAL
        
WHERE A.ESTADO = 1
ORDER BY C.NOMBRE ASC;

--SELECT*FROM V_CUENTAS;
--SELECT*FROM TB_SUCURSAL_DEPTO;
--SELECT*FROM TB_TIPO_SUCURSAL;
--SELECT*FROM TB_DEPARTAMENTOS;

--VISTA DE PRESTAMOS
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW V_PRESTAMOS AS
SELECT
          A.ID_PRESTAMO,
          B.ID_PERSONA,
          C.ID_CUENTA,
          D.ID_TIPO_APLICACION,
          
          A.FECHA_CREACION,
          A.MONTO_OTORGADO,
          A.TASA_INTERES,
          A.PLAZO,
          A.TASA_EFECTIVA,
          A.CUOTA,
          A.FECHA_VENCIMIENTO,
          A.FRECUENCIA_PAGO,
          A.SALDO_INTERES,
          A.SALDO_CAPITAL,
          A.DIAS_ATRASO,
          A.SALDO_MORA,
          A.CODIGO_PRESTAMO,
          
          B.NOMBRE,
          B.APE_PATE,
          B.APE_MATE,
          C.CODIGO_CUENTA,
          D.NOM_PRODUCTO,
          DD.NOM_SERVICIO
              
FROM  TB_PRESTAMO A
        
        INNER JOIN TB_PERSONAS            B ON A.ID_PERSONA         = B.ID_PERSONA
        INNER JOIN TB_CUENTA              C ON A.ID_CUENTA          = C.ID_CUENTA
        INNER JOIN TB_PRODUCTO_APLICACION D ON A.ID_TIPO_APLICACION = D.ID_TIPO_APLICACION
        INNER JOIN TB_TIPO_PRODUCTO      DD ON D.ID_TIPO_PRODUCTO   = DD.ID_TIPO_PRODUCTO
        
WHERE A.ESTADO = 1
ORDER BY B.NOMBRE ASC;

--SELECT*FROM TB_PERSONAS;
--VISTA DE PLNA DE PAGO
CREATE OR REPLACE FORCE NONEDITIONABLE VIEW V_PLANPAGO AS
SELECT
    A.ID_PLAN_PAGO,
    B.ID_PRESTAMO,
    
    A.FECHA_CREACION,
    B.CODIGO_PRESTAMO,
    A.FECHA_PAGADA,
    A.FECHA_CUOTA,
    A.CAPITAL,
    A.CAPITAL_PAGADO,
    A.INTERES,
    A.INTERES_PAGADO,
    A.NUM_CUOTAS,
    A.MORA,
    A.MORA_PAGADA,
    A.EXTRA AS EXTRA_PAGADO     
FROM 
    TB_PLAN_PAGO A
INNER JOIN 
    TB_PRESTAMO B ON A.ID_PRESTAMO = B.ID_PRESTAMO
WHERE A.ESTADO = 1;


--SELECT*FROM V_EMPLEADOS
--VISTA DE EMPLEADOS
CREATE OR REPLACE VIEW V_EMPLEADOS AS
SELECT
    AA.ID_PERSONA,
    AA.ID_USER,
    B.ID_CARGO_EMPLEADO,
    C.ID_IDENTIFICACION,
    D.ID_PAIS,
    E.ID_ESTADO_CIVIL,
    F.ID_RANGO_INGRESO,
    G.ID_MONEDA,
    H.ID_SUCURSAL,
    HHH.ID_DEPTO,
    A.FECHA_CREACION, 
    A.NOMBRE,
    A.APE_PATE,
    A.APE_MATE,
    A.FECHA_NAC,
    A.DIRECCION_RES,
    A.TEL_CEL,
    A.TEL_FIJO,
    A.CORREO_ELECTRONICO,
    CASE 
        WHEN A.SEXO = 0 THEN 'Femenino'
        WHEN A.SEXO = 1 THEN 'Masculino'
        ELSE 'No especificado' 
    END AS SEXO,
    A.NUM_IDENTIFICACION,
    C.NOM_IDENTIFICACION,    
    D.NOM_PAIS,    
    E.NOM_ESTADO_CIVIL AS ESTADO_CIVIL,
    F.RANGO AS RANGO_INGRESO,    
    G.NOM_MONEDA,
    B.NOM_CARGO,
    H.DIRECCION,
    HH.TIPO_SUCURSAL,
    HHH.DEPARTAMENTO,
    A.FECHA_EXPIRACION_IDE
FROM 
    TB_PERSONAS A
    INNER JOIN TB_USUARIO            AA ON A.ID_PERSONA         = AA.ID_PERSONA
    INNER JOIN TB_CARGO_EMPLEADO      B ON AA.ID_CARGO_EMPLEADO = B.ID_CARGO_EMPLEADO
    INNER JOIN TB_TIPO_IDENTIFICACION C ON A.ID_IDENTIFICACION  = C.ID_IDENTIFICACION
    INNER JOIN TB_PAISES              D ON A.ID_PAIS            = D.ID_PAIS
    INNER JOIN TB_ESTADOS_CIVILES     E ON A.ID_ESTADO_CIVIL    = E.ID_ESTADO_CIVIL
    INNER JOIN TB_RANGO_INGRESO       F ON A.ID_RANGO_INGRESO   = F.ID_RANGO_INGRESO
    INNER JOIN TB_MONEDAS             G ON A.ID_MONEDA          = G.ID_MONEDA
    INNER JOIN TB_SUCURSAL            H ON A.ID_SUCURSAL        = H.ID_SUCURSAL
    INNER JOIN TB_TIPO_SUCURSAL      HH ON H.ID_TP_SUCURSAL     = HH.ID_TP_SUCURSAL
    INNER JOIN TB_DEPARTAMENTOS     HHH ON A.ID_DEPTO          = HHH.ID_DEPTO
WHERE A.ESTADO = 1 AND A.EMPLEADO = 1
ORDER BY A.NOMBRE ASC;
--SELECT*FROM V_EMPLEADOS

SELECT*FROM TB_CUENTA;

--SELECT*FROM V_MOVIMIENTO_ABONO;
--VISTA DE MOVIMIENTOS DE ABONO
CREATE OR REPLACE VIEW V_MOVIMIENTO_ABONO AS
SELECT
    A.ID_MV_ABONO,
    B.ID_CUENTA,
    C.ID_PRESTAMO,
    E.ID_PERSONA,
    F.ID_SUCURSAL,
    G.ID_TRANSACCION,
    
    A.FECHA_CREACION, 
    A.CODIGO_TRANSACCION,
    A.DESCRIPCION,
    A.TOTAL_PAGADO,
    A.CAPITAL_PAGADO,
    A.INTERES_PAGADO,
    A.MORA_PAGADA,
    
    B.CODIGO_CUENTA,
    C.CODIGO_PRESTAMO,
    E.NOMBRE,
    E.APE_PATE,
    E.APE_MATE,
    E.CORREO_ELECTRONICO,
    F.DIRECCION,
    G.TIPO_TRANSACCION,
    G.NOM_TRANSACCION,
    GG.NOM_SERVICIO   --22
    
FROM 
    TB_MOVIMIENTO_ABONO A
    INNER JOIN TB_CUENTA      B ON A.ID_CUENTA      = B.ID_CUENTA
    INNER JOIN TB_PRESTAMO    C ON A.ID_PRESTAMO    = C.ID_PRESTAMO
    INNER JOIN TB_USUARIO     D ON A.ID_USER        = D.ID_USER
    INNER JOIN TB_PERSONAS    E ON A.ID_PERSONA     = E.ID_PERSONA
    INNER JOIN TB_SUCURSAL    F ON A.ID_SUCURSAL    = F.ID_SUCURSAL
    INNER JOIN TB_TRANSACCION G ON A.ID_TRANSACCION = G.ID_TRANSACCION
    INNER JOIN TB_TIPO_PRODUCTO GG ON G.ID_TIPO_PRODUCTO = GG.ID_TIPO_PRODUCTO
WHERE A.ESTADO = 1
ORDER BY E.NOMBRE ASC;

--SELECT*FROM V_MOVIMIENTO_CUENTA
--VISTA DE MOVIMIENTOS DE CUENTA
CREATE OR REPLACE VIEW V_MOVIMIENTO_CUENTA AS
SELECT
    A.ID_MV_CUENTA,
    B.ID_CUENTA,
    D.ID_PERSONA,
    E.ID_SUCURSAL,
    F.ID_TRANSACCION,

    A.FECHA_CREACION,
    A.DESCRIPCION, 
    A.MONTO,
    B.CODIGO_CUENTA,
    D.NOMBRE,
    D.APE_PATE,
    D.APE_MATE,
    D.CORREO_ELECTRONICO,
    E.DIRECCION,
    F.TIPO_TRANSACCION,
    F.NOM_TRANSACCION,
    FF.NOM_SERVICIO --17
    
FROM 
    TB_MOVIMIENTO_CUENTA A
    INNER JOIN TB_CUENTA      B ON A.ID_CUENTA      = B.ID_CUENTA
    INNER JOIN TB_USUARIO     C ON A.ID_USER        = C.ID_USER
    INNER JOIN TB_PERSONAS    D ON A.ID_PERSONA     = D.ID_PERSONA
    INNER JOIN TB_SUCURSAL    E ON A.ID_SUCURSAL    = E.ID_SUCURSAL
    INNER JOIN TB_TRANSACCION F ON A.ID_TRANSACCION = F.ID_TRANSACCION
    INNER JOIN TB_TIPO_PRODUCTO FF ON F.ID_TIPO_PRODUCTO = FF.ID_TIPO_PRODUCTO
WHERE A.ESTADO = 1
ORDER BY D.NOMBRE ASC;

--SELECT*FROM V_MOVIMIENTO_TARJETA;
--VISTA DE MOVIMIENTOS DE CUENTA
CREATE OR REPLACE VIEW V_MOVIMIENTO_TARJETA AS
SELECT
    A.ID_MV_TARJETA,
    B.ID_TARJETA,
    D.ID_SUCURSAL,
    E.ID_PERSONA,
    F.ID_PRESTAMO,
    G.ID_TRANSACCION,
    
    A.FECHA_CREACION,
    A.DESCRIPCION, 
    A.MONTO,
    
    B.CODIGO_TARJETA,
    D.DIRECCION,
    E.NOMBRE,
    E.APE_PATE,
    E.APE_MATE,
    E.CORREO_ELECTRONICO,
    F.CODIGO_PRESTAMO,
    G.TIPO_TRANSACCION,
    G.NOM_TRANSACCION,
    GG.NOM_SERVICIO   -19
    
FROM 
    TB_MOVIMIENTO_TARJETA A
    INNER JOIN TB_TARJETA     B ON A.ID_TARJETA     = B.ID_TARJETA
    INNER JOIN TB_USUARIO     C ON A.ID_USER        = C.ID_USER
    INNER JOIN TB_SUCURSAL    D ON A.ID_SUCURSAL    = D.ID_SUCURSAL
    INNER JOIN TB_PERSONAS    E ON A.ID_PERSONA     = E.ID_PERSONA
    INNER JOIN TB_PRESTAMO    F ON A.ID_PRESTAMO    = F.ID_PRESTAMO
    INNER JOIN TB_TRANSACCION G ON A.ID_TRANSACCION = G.ID_TRANSACCION
    INNER JOIN TB_TIPO_PRODUCTO GG ON G.ID_TIPO_PRODUCTO = GG.ID_TIPO_PRODUCTO
WHERE A.ESTADO = 1
ORDER BY E.NOMBRE ASC;


----------------------------------

----------------------------------
/*
--PARA SELCCIONAR EL TITUALR DE UNA CUENTA
SELECT A.ID_CUENTA,CAST(B.NOMBRE || ' ' || B.APE_PATE || ' ' || B.APE_MATE AS VARCHAR(100)) AS NOMBRE 
FROM TB_CUENTA A INNER JOIN TB_PERSONAS B ON A.ID_PERSONA = B.ID_PERSONA WHERE B.ESTADO = 1 AND B.EMPLEADO = 0
*/
--SELECT*FROM TB_CUENTA;
--SELECT B.ID_CUENTA, A.NOM_PRODUCTO FROM TB_PRODUCTO_APLICACION A INNER JOIN TB_CUENTA B ON B.ID_TIPO_APLICACION = A.ID_TIPO_APLICACION WHERE A.ESTADO = 1 ORDER BY B.ID_CUENTA ASC;
--SELECT ID_TIPO_APLICACION, NOM_PRODUCTO FROM TB_PRODUCTO_APLICACION WHERE ESTADO = 1 ORDER BY NOM_PRODUCTO ASC
--SELECT*FROM TB_CUENTA where estado = 0;
--SELECT*FROM TB_PRODUCTO_APLICACION;
/*
SELECT
    A.ID_PERSONA AS PERSONA_CLIENTE,
    B.ID_PERSONA AS PERSONA_CUENTA,
    CAST(A.NOMBRE|| ' ' ||A.APE_PATE|| ' ' ||A.APE_MATE AS VARCHAR2(100)) AS NOMBRE_CLIENTE
FROM
    TB_PERSONAS A
INNER JOIN 
    TB_CUENTA B
ON
    B.ID_PERSONA
=
    A.ID_PERSONA
ORDER BY
    A.NOMBRE 
ASC;
*/

/*
SELECT 
    A.ID_PERSONA AS PERSONA_CLIENTE,
    CAST(A.NOMBRE || ' ' || A.APE_PATE || ' ' || A.APE_MATE AS VARCHAR2(100)) AS NOMBRE_CLIENTE
FROM 
    TB_PERSONAS A
INNER JOIN
    TB_CUENTA B
ON
    B.ID_PERSONA = A.ID_PERSONA
WHERE 
    A.ESTADO = 1 AND A.EMPLEADO = 0 
ORDER BY 
    NOMBRE_CLIENTE ASC;
*/
/*
SELECT 
    A.ID_CUENTA AS CUENTA_PERSONA,
    CAST(B.NOMBRE || ' ' || B.APE_PATE || ' ' || B.APE_MATE AS VARCHAR2(100)) AS NOMBRE_CLIENTE
FROM 
    TB_CUENTA A
INNER JOIN
    TB_PERSONAS B
ON
    A.ID_PERSONA = B.ID_PERSONA
WHERE 
    A.ESTADO = 1 AND B.EMPLEADO = 0 
ORDER BY 
    NOMBRE_CLIENTE ASC;
*/

/* 
SELECT
    CAST(A.NOMBRE || ' ' || A.APE_PATE || ' ' || A.APE_MATE AS VARCHAR2(100)) AS NOMBRE_CLIENTE,
    B.ID_CUENTA AS CUENTA_PERSONA
FROM
    TB_PERSONAS A
INNER JOIN
    TB_CUENTA B
ON  A.ID_PERSONA = B.ID_PERSONA
WHERE
    B.ESTADO = 1 AND A.EMPLEADO = 0
ORDER BY
    NOMBRE_CLIENTE
ASC;
*/

/*
SELECT
    ID_TIPO_APLICACION,
    NOM_PRODUCTO
FROM
    TB_PRODUCTO_APLICACION
WHERE ESTADO = 1
ORDER BY NOM_PRODUCTO ASC;
*/
/*
SELECT
A.ID_PERSONA, 
CAST(A.NOMBRE || ' ' || A.APE_PATE || ' ' || A.APE_MATE AS VARCHAR2(100)) AS NOMBRE_CLIENTE
FROM
TB_PERSONAS A 
INNER JOIN
TB_CUENTA B 
ON  A.ID_PERSONA = B.ID_PERSONA 
WHERE
B.ESTADO = 1 AND A.EMPLEADO = 0 
ORDER BY NOMBRE_CLIENTE ASC
*/

--EXEC USP_GuardarPrestamo(1,NULL,10200,16.00,12.00,2,4,8);
--SELECT*FROM TB_PRESTAMO;
--SELECT*FROM TB_PERSONAS;
--SELECT*FROM TB_CUENTA;
/*
UPDATE TB_PERSONAS
SET ID_PERSONA = 3
WHERE ID_PERSONA = 38
*/

    

----------------------------------

----------------------------------

----------------------------------

--PARA GUARDAR USUARIOS DESPUES DE CREAR EMPLEADOS
EXEC USP_GuardarUsuario(1,NULL,23,22,61,'German Cayo','Apr3ndeDB',0,1,0,0);


----------------------------------

SELECT*FROM V_CLIENTES;
SELECT*FROM V_EMPLEADOS;
SELECT*FROM V_TARJETAS;
SELECT*FROM V_CUENTAS;
SELECT*FROM V_PRESTAMOS;
/*
UPDATE TB_PERSONAS
SET    ID_PERSONA = 2
WHERE  ID_PERSONA = 27
*/